@version: 3.1
@define allow-config-dups 1
options {
        chain_hostnames(0);
        time_reopen(10);
        time_reap(360);
        flush_lines(50);
        flush_timeout(5000);
        log_fifo_size(10000);
        create_dirs(yes);
        group(adm);
        perm(0640);
        dir_perm(0755);
        use_dns(no);
};

######## SOURCE
source s_all {
        internal();
        unix-stream("/dev/log");
};
source s_tcp {
        tcp(port(514) keep-alive(yes));
};
source s_udp {
        udp(port(514));
};

#########   DESTINATION 
destination df_auth { file("/var/log/auth.log"); };
destination df_syslog { file("/var/log/syslog"); };
destination df_cron { file("/var/log/cron.log"); };
destination df_daemon { file("/var/log/daemon.log"); };
destination df_kern { file("/var/log/kern.log"); };
destination df_lpr { file("/var/log/lpr.log"); };
destination df_mail { file("/var/log/mail.log"); };
destination df_user { file("/var/log/user.log"); };
destination df_uucp { file("/var/log/uucp.log"); };
destination df_facility_dot_info { file("/var/log/$FACILITY.info"); };
destination df_facility_dot_notice { file("/var/log/$FACILITY.notice"); };
destination df_facility_dot_warn { file("/var/log/$FACILITY.warn"); };
destination df_facility_dot_err { file("/var/log/$FACILITY.err"); };
destination df_facility_dot_crit { file("/var/log/$FACILITY.crit"); };
destination df_news_dot_notice { file("/var/log/news/news.notice" owner("news")); };
destination df_news_dot_err { file("/var/log/news/news.err" owner("news")); };
destination df_news_dot_crit { file("/var/log/news/news.crit" owner("news")); };
destination df_debug { file("/var/log/debug"); };
destination df_messages { file("/var/log/messages"); };
destination dp_xconsole { pipe("/dev/xconsole"); };
destination du_all { usertty("*"); };

#EXTERNAL 
destination graylog {udp("192.168.7.66" port(514));};
destination graylogproxy {tcp("192.168.7.56" port(1514));};
destination graylogsyslogtest {udp("192.168.7.67" port(514));};
destination graylogfw {udp("192.168.7.66" port(12201));};

destination std {
        file("/var/log/remotelogs/$R_YEAR/$R_MONTH/$R_DAY/$R_HOUR/$HOST/$FACILITY-$HOST-$R_YEAR-$R_MONTH-$R_DAY-$R_HOUR"
                owner(root) group(root) perm(0600) dir_perm(0700) create_dirs(yes)
        );
};

###########  FILTER
filter f_auth { facility(auth, authpriv); };
filter f_syslog { not facility(auth, authpriv); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_kern { facility(kern); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_news { facility(news); };
filter f_user { facility(user); };
filter f_uucp { facility(uucp); };
filter f_info { level(info); };
filter f_alert { level(alert); };
filter f_at_least_info { level(info..emerg); };
filter f_at_least_notice { level(notice..emerg); };
filter f_at_least_warn { level(warn..emerg); };
filter f_at_least_err { level(err..emerg); };
filter f_at_least_crit { level(crit..emerg); };
filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_messages { level(info,notice,warn) and not facility(auth,authpriv,cron,daemon,mail,news);};
filter f_emerg { level(emerg); };
filter f_xconsole { facility(daemon,mail)or level(debug,info,notice,warn)or (facility(news) and level(crit,err,notice));};

######### LOGGING RULES
###### LINUX AUTHENTICATION

#SYSLOG AUTH 
log {
        source(s_tcp);
        filter(f_auth);
        destination(graylog);
	destination(std);
};

log {
        source(s_all);
        filter(f_syslog);
        destination(df_syslog);
        destination(std);
};
log {
       source(s_all);
        filter(f_daemon);
        destination(df_daemon);
};

#NGINX TESTING
log {
        source(s_tcp);
        filter(f_debug);
        destination(graylog);
        destination(std);
};



##### FIREWALL
log {
        source(s_udp);
        filter(f_kern);
        filter(f_info);
        destination(df_kern);
	destination(std);
        destination(graylogfw);
        destination(graylogproxy);
};
log {
        source(s_all);
        filter(f_lpr);
        destination(df_lpr);
};
log {
        source(s_all);
        filter(f_mail);
        destination(df_mail);
};
log {
        source(s_all);
        filter(f_user);
        destination(df_user);
};
log {
        source(s_all);
        filter(f_uucp);
        destination(df_uucp);
};
log {
        source(s_all);
        filter(f_mail);
        filter(f_at_least_info);
        destination(df_facility_dot_info);
};
log {
        source(s_all);
        filter(f_mail);
        filter(f_at_least_warn);
        destination(df_facility_dot_warn);
};
log {
        source(s_all);
        filter(f_mail);
        filter(f_at_least_err);
        destination(df_facility_dot_err);
};
log {
        source(s_all);
        filter(f_news);
        filter(f_at_least_crit);
        destination(df_news_dot_crit);
};
log {
        source(s_all);
        filter(f_news);
        filter(f_at_least_err);
        destination(df_news_dot_err);
};
log {
        source(s_all);
        filter(f_news);
        filter(f_at_least_notice);
        destination(df_news_dot_notice);
};
log {
        source(s_all);
        filter(f_debug);
        destination(df_debug);
};
log {
        source(s_all);
        filter(f_messages);
        destination(df_messages);
};
log {
        source(s_all);
        filter(f_emerg);
        destination(du_all);
	destination(std);
};
